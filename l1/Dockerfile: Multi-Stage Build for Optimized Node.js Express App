🚀✨ Dockerfile: Multi-Stage Build for Optimized Node.js App ✨🚀

╔════════════════════════════════════════════════════╗
║              🐳 DOCKERFILE DOCUMENTATION 🐳        ║
╚════════════════════════════════════════════════════╝
🛠️ Dockerfile Content
dockerfile

# ╔═══════════════════════════════════════════════╗
# ║   🚀 Stage 1: Builder Stage (Dependencies)     ║
# ╚═══════════════════════════════════════════════╝
FROM node:22-alpine AS builder   # Use tiny Alpine Node.js image
WORKDIR /app                     # Create and use /app folder
COPY package*.json ./            # Copy package files first
RUN npm install                  # Install dependencies
COPY . .                         # Copy rest of the source code

# ╔═══════════════════════════════════════════════╗
# ║   🚀 Stage 2: Production Stage (Final Image)  ║
# ╚═══════════════════════════════════════════════╝
FROM node:22-alpine              # Start fresh for final image
WORKDIR /app                     # Working directory
COPY --from=builder /app /app    # Copy built app from builder

ENV PORT=3000                    # Default app port
EXPOSE 3000                      # Expose container port

# Entry point: start the app 🚀
CMD ["node", "index.js"]
📖 Line-by-Line Explanation
🔹 FROM node:22-alpine AS builder → Lightweight Node.js base + alias builder
🔹 WORKDIR /app → Set working directory inside container
🔹 COPY package*.json ./ → Copy package.json + package-lock.json
🔹 RUN npm install → Install dependencies inside container
🔹 COPY . . → Copy all project files

🔹 FROM node:22-alpine → New, clean, small image for production
🔹 COPY --from=builder /app /app → Copy only needed build files
🔹 ENV PORT=3000 → Default port as env var (can be overridden)
🔹 EXPOSE 3000 → Docker docs + networking
🔹 CMD ["node", "index.js"] → Start app

🎯 How to Build & Run

# 🏗️ Build the Docker image
docker build -t fancy-node-app .

# ▶️ Run the container on port 4000 (maps host 4000 → container 3000)
docker run -p 4000:3000 --rm fancy-node-app
🌐 Open browser → http://localhost:4000 🎉

╔════════════════════════════════════════════════════╗
║            💡 TIP: Keep Images Slim!               ║
║  ✔️ Use multi-stage builds                         ║
║  ✔️ Copy only what's needed                        ║
║  ✔️ Avoid dev-dependencies in production           ║
╚════════════════════════════════════════════════════╝
This file has:

Boxes & dividers (╔═══╣ ║ ╚═══)
Emojis for sections (🐳, 🚀, 🎯)
Clear structure (Stages → Explanation → Run steps)
Stylish look to make revision easy & fun
