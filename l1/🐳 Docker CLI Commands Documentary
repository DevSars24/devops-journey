# 🐳 Docker CLI Commands Documentary

## 📌 1. Running Your First Docker Container
```bash
docker run hello-world
Purpose: Checks if Docker is installed and working correctly.

Output: Prints a welcome message confirming Docker setup.

📌 2. Viewing Running Containers

docker ps
Shows only currently running containers.

📌 3. Running Another Container (BusyBox Example)

docker run busybox
BusyBox is a lightweight Linux image with basic shell utilities.

This command runs it, but if no command is given, it may exit immediately.

📌 4. Checking All Containers (Running + Stopped)

docker ps -a
Lists all containers, including stopped ones.

📌 5. Removing a Container

docker rm <container_id>
Deletes the container from local storage.

If the container is running, stop it first:

docker stop <container_id>
docker rm <container_id>
📌 6. Viewing All Images

docker images
Lists all images available in your Local Hub.

📌 7. Deleting an Image (e.g., BusyBox)

docker rmi <image_id>
Removes the image from Local Hub.

If a container is using this image, remove that container first.

📌 8. Running in Detached Mode (Free Your Terminal)

docker run -d busybox
-d = detached mode → container runs in background.

Keeps your terminal free.

📌 9. Executing Commands Inside a Running Container

docker exec -it <container_id> /bin/bash
-i = interactive

-t = terminal mode

Opens a bash shell inside the container.

📌 10. Quick Workflow Recap
1️⃣ Run Hello World

docker run hello-world
2️⃣ Check Running Containers

docker ps
3️⃣ Run BusyBox


docker run busybox
4️⃣ Check All Containers


docker ps -a
5️⃣ Remove a Container

docker rm <container_id>
6️⃣ View Images


docker images
7️⃣ Remove BusyBox Image


docker rmi <image_id>
8️⃣ Run BusyBox Detached


docker run -d busybox
9️⃣ Exec into a Container


docker exec -it <container_id> /bin/bash


📌 Tip: Always check with:

docker ps -a
docker images
